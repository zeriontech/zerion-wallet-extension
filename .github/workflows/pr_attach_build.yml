name: Attach build

# We attach build artifacts in a separate workflow,
# since they are not available in the same workflow

on:
  workflow_run:
    workflows:
      - Build pull request
    types:
      - completed

jobs:
  attach_build_artifacts:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      actions: read
    steps:
      - name: 'Download PR number'
        uses: actions/github-script@v6
        with:
          script: |
            let artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == 'pr_number';
            })[0];
            let download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(
              `${process.env.GITHUB_WORKSPACE}/pr_number.zip`,
              Buffer.from(download.data)
            );

      - name: 'Unzip PR number'
        run: unzip pr_number.zip

      - name: Attach build artifacts to the PR thread
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        run: |
          set -x
          run_number=${{ github.event.workflow_run.run_number }}
          check_suite_id=${{ github.event.workflow_run.check_suite_id }}
          repository_url=${{ github.server_url }}/${{ github.repository }}
          pr_number=$(cat ./pr_number)
          build_artifact_id=$(curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/artifacts" | jq ".artifacts[1].id")
          # We can not use "url" or "archive_download_url" here,
          # hence we need to figure our the artifact's URL "manually"
          build_download_url=${repository_url}/suites/${check_suite_id}/artifacts/${build_artifact_id}
          set +x
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$pr_number/comments" \
            -d '{"body":":package: <a href='$build_download_url'>build.zip</a>"}'
