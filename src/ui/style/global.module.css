* {
  box-sizing: border-box;
}

:root {
  --navbar-index: 2;
  --max-layout-index: 2;
  --over-layout-index: 3;
  --sheet-dialog-max-width: 600px;
}

:global(.neutral-bg) {
  --background: var(--neutral-100);
  background-color: var(--background);
}

:global(.white-bg) {
  --background: var(--white);
  background-color: var(--background);
}

:global(.transparent-bg) {
  --background: transparent;
  background-color: var(--background);
}

body {
  font-family: 'Aeonik Pro', sans-serif;
  font-size: 14px;
  line-height: calc(20 / 14);
  color: var(--black);
  background-color: var(--background);
  /**
   * Setting display: grid allows children to use {height: 100%}
   * even when we use {min-height} for body size. This is crucial for
   * tab and dialog views
   * See more: https://stackoverflow.com/q/78246951/3523645
   */
  display: grid;
  --body-width: 425px;
  --body-height: 600px;
  width: var(--body-width);
  height: var(--body-height);
  margin-inline: auto;
}

body.isDialog {
  height: auto;
  min-height: 100vh;
  width: 100%;
  margin: auto;
}

:root:has(body.isTab) {
  background-color: var(--neutral-200);
}

body.isTab {
  /**
   * prefer "initial" over "auto" to unset the custom-property value.
   * This way the code that relies on var(--body-height, fallback) will be able to use the {fallback}
   * Also "unset" seems to work, too. Not sure if it's better here than "initial"
   */
  --body-height: initial;
  --body-width: 450px;
  height: auto;
  min-height: 100vh;
  border-inline: 1px solid var(--neutral-300);
  margin-inline: auto;
}

:global(body.isIframe) {
  --body-height: initial;
  --body-width: initial;
  display: block; /* display: grid for some reason creates unwanted x an y overscolls */
}

:root:has(body.pageLayout) {
  background-color: var(--background);
}

body.pageLayout {
  --body-width: 100%;
  height: 100vh;
  width: 100%;
}

:global(.popup-only) {
  display: none;
}

body:not(.pageLayout):not(.isTab):not(.isDialog) :global(.popup-only) {
  display: block;
}

body.isDialog:not(.pageLayout) {
  max-width: 425px;
}

:global(#root) {
  height: 100%;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

:global(.fadeIn) {
  animation: fadeIn 0.2s;
}

:global(#friendly-captcha) {
  position: fixed;
  top: 2000px;
}

:global(.parent-hover) :global(.content-hover) {
  color: var(--parent-content-color);
}

@media (hover: hover) {
  :global(.parent-hover):hover :global(.content-hover) {
    color: var(--parent-hovered-content-color);
  }
}

@media (hover: hover) {
  :global(.hover\:color-primary):hover {
    color: var(--primary);
  }
  :global(.hover\:underline):hover {
    text-decoration: underline;
  }
}

input::placeholder {
  color: var(--neutral-500);
}
