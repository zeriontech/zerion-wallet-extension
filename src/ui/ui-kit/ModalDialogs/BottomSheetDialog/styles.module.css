@keyframes slideUp {
  from {
    transform: translateY(20px);
    opacity: 0.4;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.slideUp {
  will-change: transform, opacity;
  animation: slideUp 150ms;
}

@keyframes slideUpNoFadeIn {
  from {
    transform: translateY(10px);
  }
  to {
    transform: translateY(0);
  }
}

.slideUpNoFadeIn {
  will-change: transform;
  animation: slideUpNoFadeIn 150ms;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInFrom80Percent {
  from {
    opacity: 0.8;
  }
  to {
    opacity: 1;
  }
}

.dialog::backdrop {
  animation: fadeIn 150ms linear;
  background: rgba(0, 0, 0, 0.6);
}

.dialog.slideUpNoFadeIn::backdrop {
  animation: fadeInFrom80Percent 150ms linear;
}

/**
 * We can't simply set display: grid because it will break dialogs when they are closed,
 * so we have to apply this conditionally for :modal state. display: 'grid' is needed when
 * you want children to grow with min-height's property of this element
*/
.dialog.displayGrid:modal {
  display: grid;
}
